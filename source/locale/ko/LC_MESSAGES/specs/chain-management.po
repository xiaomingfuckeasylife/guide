# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, AERGO team and contributors
# This file is distributed under the same license as the aergo-guide
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: aergo-guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-27 13:45+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/specs/chain-management.rst:2
msgid "Chain Management"
msgstr ""

#: ../../source/specs/chain-management.rst:4
msgid ""
"This article describes implementation details of chain management in the "
"Aergo server. It is aimed at blockchain server developers."
msgstr ""

#: ../../source/specs/chain-management.rst:7
msgid ""
"The chain service is responsible for managing the chain. It performs the "
"following tasks in large part:"
msgstr ""

#: ../../source/specs/chain-management.rst:10
msgid "Validation"
msgstr ""

#: ../../source/specs/chain-management.rst:11
msgid "Insert block to chain"
msgstr ""

#: ../../source/specs/chain-management.rst:12
#: ../../source/specs/chain-management.rst:90
msgid "Reorganization"
msgstr ""

#: ../../source/specs/chain-management.rst:13
#: ../../source/specs/chain-management.rst:120
msgid "Syncronization"
msgstr ""

#: ../../source/specs/chain-management.rst:16
msgid "Block validation"
msgstr ""

#: ../../source/specs/chain-management.rst:18
msgid ""
"The blocks received in the network may not be valid, so a number of "
"checks are made."
msgstr ""

#: ../../source/specs/chain-management.rst:21
msgid "Pre-execution execution"
msgstr ""

#: ../../source/specs/chain-management.rst:23
msgid ""
"The validator module ensures that the block was generated from a valid BP"
" and the transaction contained in the block was not forged."
msgstr ""

#: ../../source/specs/chain-management.rst:25
msgid "Consensus validation"
msgstr ""

#: ../../source/specs/chain-management.rst:27
msgid ""
"Validate the block generated by the valid BP through block creation time "
"and signature."
msgstr ""

#: ../../source/specs/chain-management.rst:29
msgid "Transaction merkle validation"
msgstr ""

#: ../../source/specs/chain-management.rst:31
msgid ""
"Validate that the transactions were not forged. The verifier module "
"generates a merkle tree with the transactions and checks if it is the "
"same as the transaction merkle root stored in the block header."
msgstr ""

#: ../../source/specs/chain-management.rst:35
msgid "Post-execution validation"
msgstr ""

#: ../../source/specs/chain-management.rst:37
msgid ""
"These checks ensure that the results of the transaction contained in the "
"block are the same as the results of the BP node that generated the "
"block."
msgstr ""

#: ../../source/specs/chain-management.rst:39
msgid "State root validation"
msgstr ""

#: ../../source/specs/chain-management.rst:41
msgid ""
"Checks if the changed state root node hash is the same as the "
"blocksRootHash stored in the block head."
msgstr ""

#: ../../source/specs/chain-management.rst:43
msgid "Receipt merkle validation"
msgstr ""

#: ../../source/specs/chain-management.rst:45
msgid ""
"Generates a merkle tree with the receipts generated as a result of the "
"transactions and checks if they are identical to the receipts stored in "
"the block header."
msgstr ""

#: ../../source/specs/chain-management.rst:48
msgid "Insert block into chain"
msgstr ""

#: ../../source/specs/chain-management.rst:50
msgid "There are two cases in which the chain service adds blocks:"
msgstr ""

#: ../../source/specs/chain-management.rst:52
msgid "Block generated by block factory"
msgstr ""

#: ../../source/specs/chain-management.rst:54
msgid "When it is a BP node's turn, it generates new blocks in the block factory."
msgstr ""

#: ../../source/specs/chain-management.rst:56
msgid ""
"The block factory performs all transactions and forwards the block to the"
" chain service. The execution results are included with the block."
msgstr ""

#: ../../source/specs/chain-management.rst:58
msgid ""
"The execution results include the results of the transaction, receipt, "
"and state changed entry indicating the change to the account."
msgstr ""

#: ../../source/specs/chain-management.rst:60
msgid ""
"The chain service stores information related to blocks in the ChainDB and"
" information about accounts in the StateDB."
msgstr ""

#: ../../source/specs/chain-management.rst:62
msgid "Block received from another peer node"
msgstr ""

#: ../../source/specs/chain-management.rst:64
msgid "For blocks received from other peer nodes, there are three main cases:"
msgstr ""

#: ../../source/specs/chain-management.rst:66
msgid "Orphan block"
msgstr ""

#: ../../source/specs/chain-management.rst:68
msgid ""
"This is the case if the parent block has not yet been stored in the DB. "
"Orphan blocks are stored in the orphan block cache on memory. Then, when "
"the parent block is received, it is removed from the organ block cache "
"and reprocessed."
msgstr ""

#: ../../source/specs/chain-management.rst:71
msgid "Side branch block"
msgstr ""

#: ../../source/specs/chain-management.rst:73
msgid ""
"In case the parent block is stored but is not part of the main branch. In"
" this case, the block is not performed and only the block info{hash, "
"block} is stored."
msgstr ""

#: ../../source/specs/chain-management.rst:75
msgid "Main branch block"
msgstr ""

#: ../../source/specs/chain-management.rst:77
msgid ""
"In case the head of the main branch is the next block. In this case, the "
"blocks are stored after performing the transactions."
msgstr ""

#: ../../source/specs/chain-management.rst:80
msgid "The process for storing blocks in the main branch is as follows:"
msgstr ""

#: ../../source/specs/chain-management.rst:82
msgid "Validation before execution"
msgstr ""

#: ../../source/specs/chain-management.rst:83
msgid "Execute transactions"
msgstr ""

#: ../../source/specs/chain-management.rst:84
msgid "Apply changed account entries state merkle tree"
msgstr ""

#: ../../source/specs/chain-management.rst:85
msgid "Validate after execution"
msgstr ""

#: ../../source/specs/chain-management.rst:86
msgid "Save state merkle tree to StateDB"
msgstr ""

#: ../../source/specs/chain-management.rst:87
msgid "Save chain meta data to ChainDB"
msgstr ""

#: ../../source/specs/chain-management.rst:92
msgid ""
"The chain service selects and maintains the longest chain as the main "
"branch. The side branches are not executed and only the block info is "
"stored in the DB. If the side branch received from another peer is longer"
" than the main branch held by the node, the side branch is changed to the"
" main branch. This is called the reorgnize process."
msgstr ""

#: ../../source/specs/chain-management.rst:96
msgid "The reorgnization is performed as follows."
msgstr ""

#: ../../source/specs/chain-management.rst:98
msgid "Find common ancestor"
msgstr ""

#: ../../source/specs/chain-management.rst:100
msgid ""
"Syncer finds the last common ancestor block of the main branch and side "
"branch."
msgstr ""

#: ../../source/specs/chain-management.rst:102
msgid "Rollback master branch"
msgstr ""

#: ../../source/specs/chain-management.rst:104
msgid ""
"State is reset to the point at which the common ancestor block was "
"executed"
msgstr ""

#: ../../source/specs/chain-management.rst:106
msgid "Rollforward side branch"
msgstr ""

#: ../../source/specs/chain-management.rst:108
msgid ""
"Syncer runs from the next number of the common ancestor block to the head"
" block of the side branch. At this time, only StateDB is changed and "
"Chain info and Tx info are not changed."
msgstr ""

#: ../../source/specs/chain-management.rst:111
msgid "Swap chain meta"
msgstr ""

#: ../../source/specs/chain-management.rst:113
msgid ""
"Syncer do not change the chain info during rollback and rollforward to "
"atomically change the chain. Change the chain meta information after the "
"previous process has been successfully completed. At this time, chain "
"info and transaction info are deleted for the rollbacked block, and new "
"chain info and transaction info are added for the rollforwarded block."
msgstr ""

#: ../../source/specs/chain-management.rst:117
msgid ""
"Transactions belonging to rollbacked blocks but not included in "
"rollforwarded blocks are returned to mempool. This is to prevent "
"transaction loss."
msgstr ""

#: ../../source/specs/chain-management.rst:122
msgid ""
"When you add a new node or restart a node that was temporarily stopped, "
"you need to get the latest chain information from existing nodes. This is"
" called the synchonization process."
msgstr ""

#: ../../source/specs/chain-management.rst:125
msgid "The situation that causes sync is as follows:"
msgstr ""

#: ../../source/specs/chain-management.rst:127
msgid ""
"When the peer goes through a handshake process to connect, the height of "
"the chain of the remote peer is higher than the current node"
msgstr ""

#: ../../source/specs/chain-management.rst:128
msgid ""
"If the height of the block notified in the peer is higher than the head "
"of the current main branch"
msgstr ""

#: ../../source/specs/chain-management.rst:130
msgid ""
"The syncer specifies the node that sent the block that caused the sync to"
" the target node and synchronizes with the chain of that node."
msgstr ""

#: ../../source/specs/chain-management.rst:132
msgid ""
"To synchronize a long chain, a large amount of block information must be "
"received from the peer node. This is likely to cause a performance "
"degrade at the peer node. Therefore, it gets information from as many "
"peers as possible to distribute the load."
msgstr ""

#: ../../source/specs/chain-management.rst:137
msgid "Synchronize step"
msgstr ""

#: ../../source/specs/chain-management.rst:139
msgid ""
"Find common ancestor: Syncer finds the last common ancestor of the "
"current node chain and the target node chain."
msgstr ""

#: ../../source/specs/chain-management.rst:141
msgid ""
"Get hashes: It gets the hashes of the block after the common ancestor "
"from the target node."
msgstr ""

#: ../../source/specs/chain-management.rst:143
msgid ""
"Get blocks: N blocks are requested from all valid peers connected to the "
"current node."
msgstr ""

#: ../../source/specs/chain-management.rst:145
msgid ""
"Insert blocks to chain: The received block is added to the chain using "
"the chain service."
msgstr ""

#: ../../source/specs/chain-management.rst:147
msgid ""
"2, 3, and 4 are performed in parallel. Most of the time is spent in the "
"insert part of the chain."
msgstr ""

